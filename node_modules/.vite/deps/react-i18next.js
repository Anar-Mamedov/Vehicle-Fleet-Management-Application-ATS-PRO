import {
  require_react_is
} from "./chunk-YKA7KTKX.js";
import {
  _classCallCheck,
  _createClass,
  _getPrototypeOf,
  _inherits,
  _possibleConstructorReturn
} from "./chunk-YHZYYHMV.js";
import {
  _assertThisInitialized
} from "./chunk-LRS6VPLY.js";
import {
  _objectWithoutProperties,
  _slicedToArray
} from "./chunk-6YPY4QX3.js";
import "./chunk-SRCT3FTM.js";
import {
  _defineProperty,
  init_defineProperty
} from "./chunk-WCTXCRCT.js";
import {
  _typeof,
  init_typeof
} from "./chunk-JIUJQRDT.js";
import {
  require_react
} from "./chunk-XLKA4T3M.js";
import {
  __commonJS,
  __toESM
} from "./chunk-WXXH56N5.js";

// node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js
var require_hoist_non_react_statics_cjs = __commonJS({
  "node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is();
    var REACT_STATICS = {
      childContextTypes: true,
      contextType: true,
      contextTypes: true,
      defaultProps: true,
      displayName: true,
      getDefaultProps: true,
      getDerivedStateFromError: true,
      getDerivedStateFromProps: true,
      mixins: true,
      propTypes: true,
      type: true
    };
    var KNOWN_STATICS = {
      name: true,
      length: true,
      prototype: true,
      caller: true,
      callee: true,
      arguments: true,
      arity: true
    };
    var FORWARD_REF_STATICS = {
      "$$typeof": true,
      render: true,
      defaultProps: true,
      displayName: true,
      propTypes: true
    };
    var TYPE_STATICS = {};
    TYPE_STATICS[ReactIs.ForwardRef] = FORWARD_REF_STATICS;
    var defineProperty = Object.defineProperty;
    var getOwnPropertyNames = Object.getOwnPropertyNames;
    var getOwnPropertySymbols = Object.getOwnPropertySymbols;
    var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
    var getPrototypeOf = Object.getPrototypeOf;
    var objectPrototype = Object.prototype;
    function hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {
      if (typeof sourceComponent !== "string") {
        if (objectPrototype) {
          var inheritedComponent = getPrototypeOf(sourceComponent);
          if (inheritedComponent && inheritedComponent !== objectPrototype) {
            hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);
          }
        }
        var keys = getOwnPropertyNames(sourceComponent);
        if (getOwnPropertySymbols) {
          keys = keys.concat(getOwnPropertySymbols(sourceComponent));
        }
        var targetStatics = TYPE_STATICS[targetComponent["$$typeof"]] || REACT_STATICS;
        var sourceStatics = TYPE_STATICS[sourceComponent["$$typeof"]] || REACT_STATICS;
        for (var i = 0; i < keys.length; ++i) {
          var key = keys[i];
          if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {
            var descriptor = getOwnPropertyDescriptor(sourceComponent, key);
            try {
              defineProperty(targetComponent, key, descriptor);
            } catch (e) {
            }
          }
        }
        return targetComponent;
      }
      return targetComponent;
    }
    module.exports = hoistNonReactStatics;
  }
});

// node_modules/void-elements/index.js
var require_void_elements = __commonJS({
  "node_modules/void-elements/index.js"(exports, module) {
    module.exports = {
      "area": true,
      "base": true,
      "br": true,
      "col": true,
      "embed": true,
      "hr": true,
      "img": true,
      "input": true,
      "keygen": true,
      "link": true,
      "menuitem": true,
      "meta": true,
      "param": true,
      "source": true,
      "track": true,
      "wbr": true
    };
  }
});

// node_modules/html-parse-stringify2/lib/parse-tag.js
var require_parse_tag = __commonJS({
  "node_modules/html-parse-stringify2/lib/parse-tag.js"(exports, module) {
    var attrRE = /([\w-]+)|=|(['"])([.\s\S]*?)\2/g;
    var voidElements = require_void_elements();
    module.exports = function(tag) {
      var i = 0;
      var key;
      var expectingValueAfterEquals = true;
      var res = {
        type: "tag",
        name: "",
        voidElement: false,
        attrs: {},
        children: []
      };
      tag.replace(attrRE, function(match) {
        if (match === "=") {
          expectingValueAfterEquals = true;
          i++;
          return;
        }
        if (!expectingValueAfterEquals) {
          if (key) {
            res.attrs[key] = key;
          }
          key = match;
        } else {
          if (i === 0) {
            if (voidElements[match] || tag.charAt(tag.length - 2) === "/") {
              res.voidElement = true;
            }
            res.name = match;
          } else {
            res.attrs[key] = match.replace(/^['"]|['"]$/g, "");
            key = void 0;
          }
        }
        i++;
        expectingValueAfterEquals = false;
      });
      return res;
    };
  }
});

// node_modules/html-parse-stringify2/lib/parse.js
var require_parse = __commonJS({
  "node_modules/html-parse-stringify2/lib/parse.js"(exports, module) {
    var tagRE = /(?:<!--[\S\s]*?-->|<(?:"[^"]*"['"]*|'[^']*'['"]*|[^'">])+>)/g;
    var parseTag = require_parse_tag();
    var empty = Object.create ? /* @__PURE__ */ Object.create(null) : {};
    function pushTextNode(list, html, level, start, ignoreWhitespace) {
      var end = html.indexOf("<", start);
      var content = html.slice(start, end === -1 ? void 0 : end);
      if (/^\s*$/.test(content)) {
        content = " ";
      }
      if (!ignoreWhitespace && end > -1 && level + list.length >= 0 || content !== " ") {
        list.push({
          type: "text",
          content
        });
      }
    }
    module.exports = function parse(html, options) {
      options || (options = {});
      options.components || (options.components = empty);
      var result = [];
      var current;
      var level = -1;
      var arr = [];
      var byTag = {};
      var inComponent = false;
      html.replace(tagRE, function(tag, index) {
        if (inComponent) {
          if (tag !== "</" + current.name + ">") {
            return;
          } else {
            inComponent = false;
          }
        }
        var isOpen = tag.charAt(1) !== "/";
        var isComment = tag.indexOf("<!--") === 0;
        var start = index + tag.length;
        var nextChar = html.charAt(start);
        var parent;
        if (isOpen && !isComment) {
          level++;
          current = parseTag(tag);
          if (current.type === "tag" && options.components[current.name]) {
            current.type = "component";
            inComponent = true;
          }
          if (!current.voidElement && !inComponent && nextChar && nextChar !== "<") {
            pushTextNode(current.children, html, level, start, options.ignoreWhitespace);
          }
          byTag[current.tagName] = current;
          if (level === 0) {
            result.push(current);
          }
          parent = arr[level - 1];
          if (parent) {
            parent.children.push(current);
          }
          arr[level] = current;
        }
        if (isComment || !isOpen || current.voidElement) {
          if (!isComment) {
            level--;
          }
          if (!inComponent && nextChar !== "<" && nextChar) {
            parent = level === -1 ? result : arr[level].children;
            pushTextNode(parent, html, level, start, options.ignoreWhitespace);
          }
        }
      });
      if (!result.length && html.length) {
        pushTextNode(result, html, 0, 0, options.ignoreWhitespace);
      }
      return result;
    };
  }
});

// node_modules/html-parse-stringify2/lib/stringify.js
var require_stringify = __commonJS({
  "node_modules/html-parse-stringify2/lib/stringify.js"(exports, module) {
    function attrString(attrs) {
      var buff = [];
      for (var key in attrs) {
        buff.push(key + '="' + attrs[key] + '"');
      }
      if (!buff.length) {
        return "";
      }
      return " " + buff.join(" ");
    }
    function stringify(buff, doc) {
      switch (doc.type) {
        case "text":
          return buff + doc.content;
        case "tag":
          buff += "<" + doc.name + (doc.attrs ? attrString(doc.attrs) : "") + (doc.voidElement ? "/>" : ">");
          if (doc.voidElement) {
            return buff;
          }
          return buff + doc.children.reduce(stringify, "") + "</" + doc.name + ">";
      }
    }
    module.exports = function(doc) {
      return doc.reduce(function(token, rootEl) {
        return token + stringify("", rootEl);
      }, "");
    };
  }
});

// node_modules/html-parse-stringify2/index.js
var require_html_parse_stringify2 = __commonJS({
  "node_modules/html-parse-stringify2/index.js"(exports, module) {
    module.exports = {
      parse: require_parse(),
      stringify: require_stringify()
    };
  }
});

// node_modules/react-i18next/dist/es/utils.js
init_typeof();
function warn() {
  if (console && console.warn) {
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    if (typeof args[0] === "string")
      args[0] = "react-i18next:: ".concat(args[0]);
    console.warn.apply(null, args);
  }
}
var alreadyWarned = {};
function warnOnce() {
  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
    args[_key2] = arguments[_key2];
  }
  if (typeof args[0] === "string" && alreadyWarned[args[0]])
    return;
  if (typeof args[0] === "string")
    alreadyWarned[args[0]] = /* @__PURE__ */ new Date();
  warn.apply(void 0, args);
}
function deprecated() {
  if (process && process.env && true) {
    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {
      args[_key3] = arguments[_key3];
    }
    if (typeof args[0] === "string")
      args[0] = "deprecation warning -> ".concat(args[0]);
    warnOnce.apply(void 0, args);
  }
}
var initializedLanguageOnce = false;
var initializedStoreOnce = false;
function initSSR(props, setIsInitialSSR) {
  if (!initializedStoreOnce && props.initialI18nStore) {
    props.i18n.services.resourceStore.data = props.initialI18nStore;
    if (setIsInitialSSR)
      props.i18n.options.isInitialSSR = true;
    if (props.i18nOptions)
      props.i18nOptions.wait = false;
    initializedStoreOnce = true;
  }
  if (!initializedLanguageOnce && props.initialLanguage) {
    props.i18n.changeLanguage(props.initialLanguage);
    initializedLanguageOnce = true;
  }
}
var objectEntries = Object.entries || function(obj) {
  var ownProps = Object.keys(obj);
  var i = ownProps.length;
  var resArray = new Array(i);
  while (i--) {
    resArray[i] = [ownProps[i], obj[ownProps[i]]];
  }
  return resArray;
};
function eachComponents(components, iterator) {
  for (var i = 0, l = components.length; i < l; i++) {
    if (_typeof(components[i]) === "object") {
      var _iteratorNormalCompletion = true;
      var _didIteratorError = false;
      var _iteratorError = void 0;
      try {
        for (var _iterator = objectEntries(components[i])[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
          var _step$value = _slicedToArray(_step.value, 2), key = _step$value[0], value = _step$value[1];
          iterator(value, i, key);
        }
      } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
      } finally {
        try {
          if (!_iteratorNormalCompletion && _iterator.return != null) {
            _iterator.return();
          }
        } finally {
          if (_didIteratorError) {
            throw _iteratorError;
          }
        }
      }
    } else {
      iterator(components[i], i);
    }
  }
}
function filterAndFlattenComponents(components) {
  var flattened = [];
  eachComponents(components, function(Component6) {
    if (Component6 && Component6.namespaces) {
      Component6.namespaces.forEach(function(namespace) {
        if (flattened.indexOf(namespace) === -1) {
          flattened.push(namespace);
        }
      });
    }
  });
  return flattened;
}
function loadNamespaces(_ref) {
  var components = _ref.components, i18n = _ref.i18n;
  var allNamespaces = filterAndFlattenComponents(components);
  return new Promise(function(resolve) {
    i18n.loadNamespaces(allNamespaces, resolve);
  });
}
var hasOwnProperty = Object.prototype.hasOwnProperty;
function is(x, y) {
  if (x === y) {
    return x !== 0 || y !== 0 || 1 / x === 1 / y;
  }
  return x !== x && y !== y;
}
function shallowEqual(objA, objB) {
  if (is(objA, objB)) {
    return true;
  }
  if (_typeof(objA) !== "object" || objA === null || _typeof(objB) !== "object" || objB === null) {
    return false;
  }
  var keysA = Object.keys(objA);
  var keysB = Object.keys(objB);
  if (keysA.length !== keysB.length) {
    return false;
  }
  for (var i = 0; i < keysA.length; i++) {
    if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {
      return false;
    }
  }
  return true;
}

// node_modules/@babel/runtime/helpers/esm/objectSpread.js
init_defineProperty();
function _objectSpread(e) {
  for (var r = 1; r < arguments.length; r++) {
    var t = null != arguments[r] ? Object(arguments[r]) : {}, o = Object.keys(t);
    "function" == typeof Object.getOwnPropertySymbols && o.push.apply(o, Object.getOwnPropertySymbols(t).filter(function(e2) {
      return Object.getOwnPropertyDescriptor(t, e2).enumerable;
    })), o.forEach(function(r2) {
      _defineProperty(e, r2, t[r2]);
    });
  }
  return e;
}

// node_modules/react-i18next/dist/es/withNamespaces.js
var import_react3 = __toESM(require_react());
var import_hoist_non_react_statics2 = __toESM(require_hoist_non_react_statics_cjs());

// node_modules/react-i18next/dist/es/context.js
var import_react = __toESM(require_react());
var import_hoist_non_react_statics = __toESM(require_hoist_non_react_statics_cjs());
var defaultOptions = {
  wait: false,
  withRef: false,
  bindI18n: "languageChanged loaded",
  bindStore: "added removed",
  translateFuncName: "t",
  nsMode: "default",
  usePureComponent: false,
  omitBoundRerender: true,
  transEmptyNodeValue: ""
};
var i18nInstance;
function setDefaults() {
  var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  defaultOptions = _objectSpread({}, defaultOptions, options);
}
function getDefaults() {
  return defaultOptions;
}
function setI18n(instance) {
  i18nInstance = instance;
}
function getI18n() {
  return i18nInstance;
}
var reactI18nextModule = {
  type: "3rdParty",
  init: function init(instance) {
    setDefaults(instance.options.react);
    setI18n(instance);
  }
};
var I18nContext = import_react.default.createContext();
function withContext() {
  return function Wrapper(WrappedComponent) {
    var WithContext = function(_Component) {
      _inherits(WithContext2, _Component);
      function WithContext2() {
        _classCallCheck(this, WithContext2);
        return _possibleConstructorReturn(this, _getPrototypeOf(WithContext2).apply(this, arguments));
      }
      _createClass(WithContext2, [{
        key: "render",
        value: function render() {
          var _this$props = this.props, innerRef = _this$props.innerRef, rest = _objectWithoutProperties(_this$props, ["innerRef"]);
          if (innerRef)
            rest.ref = innerRef;
          return import_react.default.createElement(I18nContext.Consumer, null, function(ctx) {
            return import_react.default.createElement(WrappedComponent, _objectSpread({}, ctx, rest));
          });
        }
      }]);
      return WithContext2;
    }(import_react.Component);
    return WithContext;
  };
}
function getDisplayName(component) {
  return component.displayName || component.name || "Component";
}
function withI18n() {
  return function Wrapper(WrappedComponent) {
    var WithMergedOptions = function(_Component2) {
      _inherits(WithMergedOptions2, _Component2);
      function WithMergedOptions2() {
        _classCallCheck(this, WithMergedOptions2);
        return _possibleConstructorReturn(this, _getPrototypeOf(WithMergedOptions2).apply(this, arguments));
      }
      _createClass(WithMergedOptions2, [{
        key: "render",
        value: function render() {
          var _this = this;
          var _this$props2 = this.props, innerRef = _this$props2.innerRef, rest = _objectWithoutProperties(_this$props2, ["innerRef"]);
          if (innerRef)
            rest.ref = innerRef;
          var extraProps = {};
          var i18nOptions = this.props.i18nOptions || this.i18nOptions;
          var i18n = this.props.i18n || getI18n();
          if (!i18nOptions) {
            var possibleI18nOptionsFromProps = Object.keys(defaultOptions).reduce(function(mem, k) {
              if (_this.props[k])
                mem[k] = _this.props[k];
              return mem;
            }, {});
            i18nOptions = _objectSpread({}, getDefaults(), i18n && i18n.options && i18n.options.react, possibleI18nOptionsFromProps);
            this.i18nOptions = i18nOptions;
          }
          if (i18n) {
            extraProps.i18n = i18n;
            extraProps.t = i18n.t.bind(i18n);
            extraProps.lng = i18n.language;
            extraProps.i18nOptions = i18nOptions;
          }
          return import_react.default.createElement(WrappedComponent, _objectSpread({}, extraProps, rest));
        }
      }]);
      return WithMergedOptions2;
    }(import_react.Component);
    var WithMergedOptionsWithContext = withContext()(WithMergedOptions);
    WithMergedOptionsWithContext.WrappedComponent = WrappedComponent;
    WithMergedOptionsWithContext.displayName = "WithMergedOptions(".concat(getDisplayName(WrappedComponent), ")");
    return (0, import_hoist_non_react_statics.default)(WithMergedOptionsWithContext, WrappedComponent);
  };
}

// node_modules/react-i18next/dist/es/NamespacesConsumer.js
var import_react2 = __toESM(require_react());
var removedIsInitialSSR = false;
var NamespacesConsumerComponent = function(_Component) {
  _inherits(NamespacesConsumerComponent2, _Component);
  function NamespacesConsumerComponent2(props) {
    var _this;
    _classCallCheck(this, NamespacesConsumerComponent2);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(NamespacesConsumerComponent2).call(this, props));
    if (!props.i18n) {
      _this.state = {
        i18nLoadedAt: null,
        ready: false
      };
      return _possibleConstructorReturn(_this, warnOnce("You will need pass in an i18next instance either by props, using I18nextProvider or by using i18nextReactModule. Learn more https://react.i18next.com/components/overview#getting-the-i-18-n-function-into-the-flow"));
    }
    if (typeof props.i18n.then === "function") {
      _this.state = {
        i18nLoadedAt: null,
        ready: false
      };
      return _possibleConstructorReturn(_this, warnOnce("Detected a promise instead of an i18next instance. Probably you passed the return value of the i18next.init() function, this is not possible anymore with v13 of i18next. Just pass in the i18next instance directly."));
    }
    initSSR(props);
    if (props.i18n.options && props.i18n.options.isInitialSSR) {
      props.i18nOptions.wait = false;
    }
    var namespaces = _this.getNamespaces();
    if (props.reportNS) {
      namespaces.forEach(props.reportNS);
    }
    var language = props.i18n.languages && props.i18n.languages[0];
    var ready = !!language && namespaces.every(function(ns) {
      return props.i18n.hasResourceBundle(language, ns);
    });
    _this.state = {
      i18nLoadedAt: null,
      ready
    };
    _this.t = _this.getI18nTranslate();
    _this.onI18nChanged = _this.onI18nChanged.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.getI18nTranslate = _this.getI18nTranslate.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    _this.namespaces = _this.getNamespaces.bind(_assertThisInitialized(_assertThisInitialized(_this)));
    return _this;
  }
  _createClass(NamespacesConsumerComponent2, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.loadNamespaces();
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (this.props.ns && prevProps.ns !== this.props.ns)
        this.loadNamespaces();
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this2 = this;
      var _this$props = this.props, i18n = _this$props.i18n, i18nOptions = _this$props.i18nOptions;
      this.mounted = false;
      if (this.onI18nChanged) {
        if (i18nOptions.bindI18n) {
          var p = i18nOptions.bindI18n.split(" ");
          p.forEach(function(f) {
            return i18n.off(f, _this2.onI18nChanged);
          });
        }
        if (i18nOptions.bindStore) {
          var _p = i18nOptions.bindStore.split(" ");
          _p.forEach(function(f) {
            return i18n.store && i18n.store.off(f, _this2.onI18nChanged);
          });
        }
      }
    }
  }, {
    key: "onI18nChanged",
    value: function onI18nChanged() {
      var i18nOptions = this.props.i18nOptions;
      var ready = this.state.ready;
      if (!this.mounted)
        return;
      if (!ready && i18nOptions.omitBoundRerender)
        return;
      this.t = this.getI18nTranslate();
      this.setState({
        i18nLoadedAt: /* @__PURE__ */ new Date()
      });
    }
  }, {
    key: "getI18nTranslate",
    value: function getI18nTranslate() {
      var _this$props2 = this.props, i18n = _this$props2.i18n, i18nOptions = _this$props2.i18nOptions;
      var namespaces = this.getNamespaces();
      return i18n.getFixedT(null, i18nOptions.nsMode === "fallback" ? namespaces : namespaces && namespaces.length ? namespaces[0] : "translation");
    }
  }, {
    key: "getNamespaces",
    value: function getNamespaces() {
      var _this$props3 = this.props, i18n = _this$props3.i18n, ns = _this$props3.ns, defaultNS = _this$props3.defaultNS;
      var namespaces = typeof ns === "function" ? ns(this.props) : ns || defaultNS || i18n.options && i18n.options.defaultNS;
      return typeof namespaces === "string" ? [namespaces] : namespaces || [];
    }
  }, {
    key: "loadNamespaces",
    value: function loadNamespaces2() {
      var _this3 = this;
      var _this$props4 = this.props, i18n = _this$props4.i18n, i18nOptions = _this$props4.i18nOptions;
      var ready = this.state.ready;
      var bind = function bind2() {
        if (i18nOptions.bindI18n && i18n)
          i18n.on(i18nOptions.bindI18n, _this3.onI18nChanged);
        if (i18nOptions.bindStore && i18n.store)
          i18n.store.on(i18nOptions.bindStore, _this3.onI18nChanged);
      };
      this.mounted = true;
      i18n.loadNamespaces(this.getNamespaces(), function() {
        var handleReady = function handleReady2() {
          if (_this3.mounted && !ready) {
            _this3.setState({
              ready: true
            }, function() {
              if (!i18nOptions.wait)
                _this3.onI18nChanged();
            });
          }
          if (i18nOptions.wait && _this3.mounted)
            bind();
        };
        if (i18n.isInitialized) {
          handleReady();
        } else {
          var initialized = function initialized2() {
            setTimeout(function() {
              i18n.off("initialized", initialized2);
            }, 1e3);
            handleReady();
          };
          i18n.on("initialized", initialized);
        }
      });
      if (!i18nOptions.wait)
        bind();
    }
  }, {
    key: "render",
    value: function render() {
      var _this$props5 = this.props, children = _this$props5.children, i18n = _this$props5.i18n, defaultNS = _this$props5.defaultNS, reportNS = _this$props5.reportNS, i18nOptions = _this$props5.i18nOptions;
      var _ref = this.state || {
        ready: false
      }, ready = _ref.ready;
      var t = this.t;
      if (!ready && i18nOptions.wait)
        return null;
      if (i18n.options && i18n.options.isInitialSSR && !removedIsInitialSSR) {
        removedIsInitialSSR = true;
        setTimeout(function() {
          delete i18n.options.isInitialSSR;
        }, 100);
      }
      return import_react2.default.createElement(I18nContext.Provider, {
        value: {
          i18n,
          t,
          defaultNS,
          reportNS,
          lng: i18n && i18n.language
        }
      }, children(this.t, {
        i18n,
        t,
        lng: i18n.language,
        ready
      }));
    }
  }]);
  return NamespacesConsumerComponent2;
}(import_react2.Component);
var NamespacesConsumer = withI18n()(NamespacesConsumerComponent);
var I18n = NamespacesConsumer;

// node_modules/react-i18next/dist/es/withNamespaces.js
function getDisplayName2(component) {
  return component.displayName || component.name || "Component";
}
function withNamespaces(namespaceArg) {
  var options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
  return function Wrapper(WrappedComponent) {
    var LoadNamespace = function(_Component) {
      _inherits(LoadNamespace2, _Component);
      function LoadNamespace2() {
        _classCallCheck(this, LoadNamespace2);
        return _possibleConstructorReturn(this, _getPrototypeOf(LoadNamespace2).apply(this, arguments));
      }
      _createClass(LoadNamespace2, [{
        key: "shouldComponentUpdate",
        value: function shouldComponentUpdate(nextProps) {
          var i18nOptions = this.props.i18nOptions;
          if (!i18nOptions.usePureComponent && !options.usePureComponent) {
            return true;
          }
          return !shallowEqual(this.props, nextProps);
        }
      }, {
        key: "render",
        value: function render() {
          var _this = this;
          var _this$props = this.props, namespaces = _this$props.namespaces, i18nOptions = _this$props.i18nOptions;
          var mergedI18nOptions = _objectSpread({}, i18nOptions, options);
          var extraProps = {};
          if (mergedI18nOptions.innerRef) {
            extraProps.ref = mergedI18nOptions.innerRef;
          }
          return import_react3.default.createElement(NamespacesConsumer, _objectSpread({
            ns: namespaces || namespaceArg
          }, this.props, {
            i18nOptions: Object.keys(mergedI18nOptions).length > 0 ? mergedI18nOptions : null
          }), function(t, _ref) {
            var ready = _ref.ready, rest = _objectWithoutProperties(_ref, ["ready"]);
            return import_react3.default.createElement(WrappedComponent, _objectSpread({
              tReady: ready
            }, _this.props, extraProps, rest));
          });
        }
      }]);
      return LoadNamespace2;
    }(import_react3.Component);
    var LoadNamespaceWithContext = withI18n()(LoadNamespace);
    LoadNamespaceWithContext.WrappedComponent = WrappedComponent;
    LoadNamespaceWithContext.displayName = "LoadNamespace(".concat(getDisplayName2(WrappedComponent), ")");
    LoadNamespaceWithContext.namespaces = namespaceArg;
    return (0, import_hoist_non_react_statics2.default)(LoadNamespaceWithContext, WrappedComponent);
  };
}
withNamespaces.setDefaults = setDefaults;
withNamespaces.setI18n = setI18n;
var translate = withNamespaces;

// node_modules/react-i18next/dist/es/Trans.js
init_typeof();
var import_react4 = __toESM(require_react());
var import_html_parse_stringify2 = __toESM(require_html_parse_stringify2());
function hasChildren(node) {
  return node && (node.children || node.props && node.props.children);
}
function getChildren(node) {
  return node && node.children ? node.children : node.props && node.props.children;
}
function nodesToString(mem, children, index) {
  if (!children)
    return "";
  if (Object.prototype.toString.call(children) !== "[object Array]")
    children = [children];
  children.forEach(function(child, i) {
    var elementKey = "".concat(i);
    if (typeof child === "string") {
      mem = "".concat(mem).concat(child);
    } else if (hasChildren(child)) {
      mem = "".concat(mem, "<").concat(elementKey, ">").concat(nodesToString("", getChildren(child), i + 1), "</").concat(elementKey, ">");
    } else if (import_react4.default.isValidElement(child)) {
      mem = "".concat(mem, "<").concat(elementKey, "></").concat(elementKey, ">");
    } else if (_typeof(child) === "object") {
      var clone = _objectSpread({}, child);
      var format = clone.format;
      delete clone.format;
      var keys = Object.keys(clone);
      if (format && keys.length === 1) {
        mem = "".concat(mem, "{{").concat(keys[0], ", ").concat(format, "}}");
      } else if (keys.length === 1) {
        mem = "".concat(mem, "{{").concat(keys[0], "}}");
      } else {
        warn("react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.", child);
      }
    } else {
      warn("Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.", child);
    }
  });
  return mem;
}
function renderNodes(children, targetString, i18n) {
  if (targetString === "")
    return [];
  if (!children)
    return [targetString];
  var data = {};
  function getData(childs) {
    if (Object.prototype.toString.call(childs) !== "[object Array]")
      childs = [childs];
    childs.forEach(function(child) {
      if (typeof child === "string")
        return;
      if (hasChildren(child))
        getData(getChildren(child));
      else if (_typeof(child) === "object" && !import_react4.default.isValidElement(child))
        Object.assign(data, child);
    });
  }
  getData(children);
  targetString = i18n.services.interpolator.interpolate(targetString, data, i18n.language);
  var ast = import_html_parse_stringify2.default.parse("<0>".concat(targetString, "</0>"));
  function mapAST(reactNodes, astNodes) {
    if (Object.prototype.toString.call(reactNodes) !== "[object Array]")
      reactNodes = [reactNodes];
    if (Object.prototype.toString.call(astNodes) !== "[object Array]")
      astNodes = [astNodes];
    return astNodes.reduce(function(mem, node, i) {
      if (node.type === "tag") {
        var child = reactNodes[parseInt(node.name, 10)] || {};
        var isElement = import_react4.default.isValidElement(child);
        if (typeof child === "string") {
          mem.push(child);
        } else if (hasChildren(child)) {
          var inner = mapAST(getChildren(child), node.children);
          if (child.dummy)
            child.children = inner;
          mem.push(import_react4.default.cloneElement(child, _objectSpread({}, child.props, {
            key: i
          }), inner));
        } else if (_typeof(child) === "object" && !isElement) {
          var content = node.children[0] ? node.children[0].content : null;
          if (content)
            mem.push(content);
        } else {
          mem.push(child);
        }
      } else if (node.type === "text") {
        mem.push(node.content);
      }
      return mem;
    }, []);
  }
  var result = mapAST([{
    dummy: true,
    children
  }], ast);
  return getChildren(result[0]);
}
var TransComponent = function(_React$Component) {
  _inherits(TransComponent2, _React$Component);
  function TransComponent2() {
    _classCallCheck(this, TransComponent2);
    return _possibleConstructorReturn(this, _getPrototypeOf(TransComponent2).apply(this, arguments));
  }
  _createClass(TransComponent2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, children = _this$props.children, count = _this$props.count, parent = _this$props.parent, i18nKey = _this$props.i18nKey, tOptions = _this$props.tOptions, values = _this$props.values, defaults = _this$props.defaults, components = _this$props.components, namespace = _this$props.ns, i18n = _this$props.i18n, tFromContextAndProps = _this$props.t, defaultNS = _this$props.defaultNS, reportNS = _this$props.reportNS, lng = _this$props.lng, i18nOptions = _this$props.i18nOptions, additionalProps = _objectWithoutProperties(_this$props, ["children", "count", "parent", "i18nKey", "tOptions", "values", "defaults", "components", "ns", "i18n", "t", "defaultNS", "reportNS", "lng", "i18nOptions"]);
      var t = tFromContextAndProps || i18n.t.bind(i18n);
      var reactI18nextOptions = i18n.options && i18n.options.react || {};
      var useAsParent = parent !== void 0 ? parent : reactI18nextOptions.defaultTransParent;
      var defaultValue = defaults || nodesToString("", children, 0) || reactI18nextOptions.transEmptyNodeValue;
      var hashTransKey = reactI18nextOptions.hashTransKey;
      var key = i18nKey || (hashTransKey ? hashTransKey(defaultValue) : defaultValue);
      var interpolationOverride = values ? {} : {
        interpolation: {
          prefix: "#$?",
          suffix: "?$#"
        }
      };
      var translation = key ? t(key, _objectSpread({}, tOptions, values, interpolationOverride, {
        defaultValue,
        count,
        ns: namespace
      })) : defaultValue;
      if (reactI18nextOptions.exposeNamespace) {
        var ns = typeof t.ns === "string" ? t.ns : t.ns[0];
        if (i18nKey && i18n.options && i18n.options.nsSeparator && i18nKey.indexOf(i18n.options.nsSeparator) > -1) {
          var parts = i18nKey.split(i18n.options.nsSeparator);
          ns = parts[0];
        }
        if (t.ns)
          additionalProps["data-i18next-options"] = JSON.stringify({
            ns
          });
      }
      if (!useAsParent)
        return renderNodes(components || children, translation, i18n);
      return import_react4.default.createElement(useAsParent, additionalProps, renderNodes(components || children, translation, i18n));
    }
  }]);
  return TransComponent2;
}(import_react4.default.Component);
var Trans = withI18n()(TransComponent);

// node_modules/react-i18next/dist/es/I18nextProvider.js
var import_react5 = __toESM(require_react());
var I18nextProvider = function(_Component) {
  _inherits(I18nextProvider2, _Component);
  function I18nextProvider2(props) {
    var _this;
    _classCallCheck(this, I18nextProvider2);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(I18nextProvider2).call(this, props));
    initSSR(props, true);
    return _this;
  }
  _createClass(I18nextProvider2, [{
    key: "render",
    value: function render() {
      var _this$props = this.props, children = _this$props.children, i18n = _this$props.i18n, defaultNS = _this$props.defaultNS, reportNS = _this$props.reportNS;
      return import_react5.default.createElement(I18nContext.Provider, {
        value: {
          i18n,
          defaultNS,
          reportNS,
          lng: i18n && i18n.language,
          t: i18n && i18n.t.bind(i18n)
        }
      }, children);
    }
  }]);
  return I18nextProvider2;
}(import_react5.Component);

// node_modules/react-i18next/dist/es/Interpolate.js
var import_react6 = __toESM(require_react());
var InterpolateComponent = function(_Component) {
  _inherits(InterpolateComponent2, _Component);
  function InterpolateComponent2(props) {
    var _this;
    _classCallCheck(this, InterpolateComponent2);
    _this = _possibleConstructorReturn(this, _getPrototypeOf(InterpolateComponent2).call(this, props));
    deprecated('Interpolate is deprecated and will be removed in the next major version (v9.0.0). Usage can be replaced by the "Trans" component');
    return _this;
  }
  _createClass(InterpolateComponent2, [{
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props = this.props, i18n = _this$props.i18n, t = _this$props.t, i18nKey = _this$props.i18nKey, options = _this$props.options, className = _this$props.className, style = _this$props.style;
      var parent = this.props.parent || "span";
      var REGEXP = this.props.regexp || i18n.services.interpolator.regexp;
      var useDangerouslySetInnerHTML = this.props.useDangerouslySetInnerHTML || false;
      var dangerouslySetInnerHTMLPartElement = this.props.dangerouslySetInnerHTMLPartElement || "span";
      var tOpts = _objectSpread({}, {}, options, {
        interpolation: {
          prefix: "#$?",
          suffix: "?$#"
        }
      });
      var format = t(i18nKey, tOpts);
      if (!format || typeof format !== "string")
        return import_react6.default.createElement("noscript", null);
      var children = [];
      var handleFormat = function handleFormat2(key, props) {
        if (key.indexOf(i18n.options.interpolation.formatSeparator) < 0) {
          if (props[key] === void 0)
            i18n.services.logger.warn("interpolator: missed to pass in variable ".concat(key, " for interpolating ").concat(format));
          return props[key];
        }
        var p = key.split(i18n.options.interpolation.formatSeparator);
        var k = p.shift().trim();
        var f = p.join(i18n.options.interpolation.formatSeparator).trim();
        if (props[k] === void 0)
          i18n.services.logger.warn("interpolator: missed to pass in variable ".concat(k, " for interpolating ").concat(format));
        return i18n.options.interpolation.format(props[k], f, i18n.language);
      };
      format.split(REGEXP).reduce(function(memo, match, index) {
        var child;
        if (index % 2 === 0) {
          if (match.length === 0)
            return memo;
          if (useDangerouslySetInnerHTML) {
            child = import_react6.default.createElement(dangerouslySetInnerHTMLPartElement, {
              dangerouslySetInnerHTML: {
                __html: match
              }
            });
          } else {
            child = match;
          }
        } else {
          child = handleFormat(match, _this2.props);
        }
        memo.push(child);
        return memo;
      }, children);
      var additionalProps = {};
      if (i18n.options.react && i18n.options.react.exposeNamespace) {
        var ns = typeof t.ns === "string" ? t.ns : t.ns[0];
        if (i18nKey && i18n.options.nsSeparator && i18nKey.indexOf(i18n.options.nsSeparator) > -1) {
          var parts = i18nKey.split(i18n.options.nsSeparator);
          ns = parts[0];
        }
        if (t.ns)
          additionalProps["data-i18next-options"] = JSON.stringify({
            ns
          });
      }
      if (className)
        additionalProps.className = className;
      if (style)
        additionalProps.style = style;
      return import_react6.default.createElement.apply(this, [parent, additionalProps].concat(children));
    }
  }]);
  return InterpolateComponent2;
}(import_react6.Component);
var Interpolate = withI18n()(InterpolateComponent);
export {
  I18n,
  I18nContext,
  I18nextProvider,
  Interpolate,
  NamespacesConsumer,
  Trans,
  getDefaults,
  getI18n,
  loadNamespaces,
  reactI18nextModule,
  setDefaults,
  setI18n,
  translate,
  withI18n,
  withNamespaces
};
//# sourceMappingURL=react-i18next.js.map
